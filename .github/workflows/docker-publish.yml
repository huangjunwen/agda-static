#
name: Create and publish a Docker image

on:
  push:
    branches: ['build']

# Defines two custom environment variables for the workflow. 
# These are used for the Container registry domain, 
# and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: huangjunwen/agda-static

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    # https://tomasvotruba.com/blog/2020/11/16/how-to-make-dynamic-matrix-in-github-actions/
    strategy:
      matrix:
        agda_version:
        - "v2.6.4.3"
        arch:
        - "amd64"
        - "i386"
        optimization_level:
        - "0"
        - "2"
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Log in to the Container registry
      id: login
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      id: setup
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile
        build-args: |
          AGDA_VER=${{ matrix.agda_version }}
          OPTIMIZATION_LEVEL=${{ matrix.optimization_level }}
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:${{ matrix.arch }}-${{ matrix.agda_version }}-O${{ matrix.optimization_level }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/${{ matrix.arch }}
        # cache
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:${{ matrix.arch }}-${{ matrix.agda_version }}-O${{ matrix.optimization_level }}-cache
        cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:${{ matrix.arch }}-${{ matrix.agda_version }}-O${{ matrix.optimization_level }}-cache,mode=max
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true
